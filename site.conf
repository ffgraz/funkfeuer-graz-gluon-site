-- This is an example site configuration for Gluon v2021.1.1
--
-- Take a look at the documentation located at
-- https://gluon.readthedocs.io/ for details.
--
-- This configuration will not work as is. You're required to make
-- community specific changes to it!
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'gluon-',

  -- Name of the community.
  site_name = 'Funkfeuer Graz',

  -- Shorthand of the community.
  site_code = 'ffgraz',

  -- 32 bytes of random data, encoded in hexadecimal
  -- This data must be unique among all sites and domains!
  -- Can be generated using: echo $(hexdump -v -n 32 -e '1/1 "%02x"' </dev/urandom)
  domain_seed = 'b078cc105bbd0fc96fee1253c7e3246dd759003c2eb10e9893d8dffe3928b13d',

  -- Prefixes used within the mesh.
  -- prefix6 is required, prefix4 can be omitted if next_node.ip4
  -- is not set.
  prefix4 = '10.12.0.0/16',
  prefix6 = 'fdff:182f:da60::/48',

  node_prefix4 = '10.12.23.0/16',
  node_prefix4_range = 24, -- range of node_prefix4 that should be randomized
  node_prefix4_temporary = true,

  node_prefix6 = 'fdff:182f:da60:23::/48',
  node_prefix6_range = 64, -- range of tmpIp6 that should be randomized
  node_prefix6_temporary = true,

  node_client_prefix6 = 'fdff:182f:da60:c::/64',

  next_node = {
    name = { 'knoten.graz.funkfeuer.at', 'knoten.ffgraz.net', 'nextnode', 'knoten', 'nn' },
    ip4 = '10.12.0.1',
    ip6 = 'fd::1',
  },

  -- Timezone of your community. TODO
  -- See https://openwrt.org/docs/guide-user/base-system/system_configuration#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {
    '0.pool.ntp.org',
    '1.pool.ntp.org',
    '2.pool.ntp.org',
    '3.pool.ntp.org',
  },

  -- Wireless regulatory domain of your community.
  regdom = 'AT',

  config_mode = {
    remote_login = {
      show_password_form = true,
      min_password_length = 12,
    },
  },

  ddhcpd = {
    range = "10.12.64.0/22",    -- Network to announce and manage blocks in
  },

  manman = {
    api = {
      'http://manapi.mkg20001.io',
      'http://manapi-mesh.mkg20001.io'
    },
    key = '4134e71f95b0fb77a138288251771e36c582136b5d004e72d33bb03fc673ea1f',
  },

  dns = {
    servers = {
      '10.12.0.10',
      '1.1.1.1', -- this is a fallback for mesh vpn with no dns on wan and just in case mesh one has downtime
    },
  },

  -- Configure new style interfaces
	interfaces = {
		lan = {
			default_roles = { 'client' },
		},
		wan = {
			default_roles = { 'uplink', 'mesh' },
		},
		single = {
			default_roles = { 'uplink', 'mesh' },
		},
	},

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 5,
    channel_adjustable = true,
    include_channel_in_id = true,

    -- ESSIDs used for client network.
    ap = {
      ssid = 'graz.funkfeuer.at', -- (optional - SSID for open client network)
      -- funkfeuer does not approve
      disabled = true,

      -- Configuration for a backward compatible OWE network below.
      owe_ssid = 'owe.graz.funkfeuer.at', -- (optional - SSID for OWE client network)
      owe_transition_mode = true, -- (optional - enables transition-mode - requires ssid as well as owe_ssid)
    },

    mesh = {
      id = 'http://graz.funkfeuer.at/v%ss',
      mcast_rate = 12000,
    },
    ibss = {
      ssid = 'http://graz.funkfeuer.at/v%s',
      bssid = '%02i:CA:FF:EE:BA:BE',
      mcast_rate = 12000,
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel.
  wifi5 = {
    channel = 44,
    channel_adjustable = true,
    include_channel_in_id = true,
    outdoor_chanlist = '100-140',

    ap = {
      ssid = 'graz.funkfeuer.at',
      -- funkfeuer does not approve
      disabled = true,

      -- Configuration for a backward compatible OWE network below.
      owe_ssid = 'owe.graz.funkfeuer.at', -- (optional - SSID for OWE client network)
      owe_transition_mode = true, -- (optional - enables transition-mode - requires ssid as well as owe_ssid)
    },
    mesh = {
      id = 'http://graz.funkfeuer.at/5v%ss',
      mcast_rate = 12000,
    },
    ibss = {
      ssid = 'http://graz.funkfeuer.at/5v%s',
      bssid = '%02i:CA:FF:EE:BA:BE',
      mcast_rate = 12000,
    },
  },

  -- Wireless configuration for 60 GHz interfaces.
  wifi60 = {
    -- Wireless channel.
    channel = 1,
    channel_adjustable = true,
    include_channel_in_id = true,

    mesh = {
      id = 'http://graz.funkfeuer.at/60v%s',
      mcast_rate = 12000,
    },
  },

  mesh = {
    vxlan = false,
    olsrd = {
      -- src https://wiki.graz.funkfeuer.at/FFTheHardWay#olsrd_konfigurieren_.28Commandline.29
      -- Rt options have been commented out as mesh vpn doesn't like them
      -- TODO: investigate and adjust/remove as necesarry
      v1_4 = {
        enable = true,
        config = {
          DebugLevel = 0,
          IpVersion = 4,
          AllowNoInt = yes,
          FIBMetric = "flat",
          Pollrate = 0.025,
          TcRedundancy = 2,
          NatThreshold = 0.75,
          MprCoverage = 7,
          LinkQualityLevel = 2,
          LinkQualityFishEye = 1,
          LinkQualityAlgorithm = "etx_ff",
          UseHysteresis = "no",
          -- RtTablePriority = "none",
          -- RtTableDefaultOlsrPriority = "none",
          -- RtTableTunnelPriority = "none",
          -- RtTableDefaultPriority = "none",
          -- RtTable = "auto",
          -- RtTableDefault = "auto",
          -- RtTableTunnel = "auto",
          SmartGateway = "no"
        },
      },
      v2 = {
        enable = true,
        ip6_exclusive_mode = true,
      },
      olsr12 = {
        enable = true,
        server = '10.12.6.66',
        port = 1195,
        ca = [[
-----BEGIN CERTIFICATE-----
MIIDPDCCAiSgAwIBAgIUPMsDx5Iu54caCCJ1tMz5Rw/nkjYwDQYJKoZIhvcNAQEL
BQAwETEPMA0GA1UEAwwGb2xzcjEyMB4XDTIyMDQwMTAwMDgzM1oXDTMyMDMyOTAw
MDgzM1owETEPMA0GA1UEAwwGb2xzcjEyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A
MIIBCgKCAQEAw4rdJmVn5QaXrCgiSrdbuIxKPZBeZffWN4gCYYgE0sKdnrq2Hq0Q
2qKykf6oUN3oJsznCLc2MtOzt+05J2XTx1SUMsUAW7vrL7oCXhTLZQcRYHxxO7Yc
N75TvQD0s7L1FnPG9mO+4YJABLwKss86BxohHuBOMyPvJQ3T9lS1GKso1UusW2qy
AG3f1i1XgeDQMXFy0cRTWpdUE8NA/ZdtubyVNMsEh3cgrUrRutMZjFlbFx80AP7X
IKc+f/HGXDk2VcRwOa2GbDFYVF+6L/Cz00vkEnwxBzKdxoQo110gzHUx53fd3zNy
lWIM707UasbYuF6vX4mZMw6nOrkMjk+1vQIDAQABo4GLMIGIMB0GA1UdDgQWBBRc
3EzKCVNEgeY+ZdbZoAlMhaBvPjBMBgNVHSMERTBDgBRc3EzKCVNEgeY+ZdbZoAlM
haBvPqEVpBMwETEPMA0GA1UEAwwGb2xzcjEyghQ8ywPHki7nhxoIInW0zPlHD+eS
NjAMBgNVHRMEBTADAQH/MAsGA1UdDwQEAwIBBjANBgkqhkiG9w0BAQsFAAOCAQEA
s0nZOS79vIUTz8kOcnywOnK9rz+dOP6WmS5Bfp3jg9dBUdaQHuFE6QlO4cAvY1Z8
Y3oUe7GIRxi8KiTOKbdXb0pEAtwLQJy/gS+yOSDuSpdekt1cefwPI6r39YMIu0st
Re6ddtXEBixEJGSH3QxIp/r8UFK+cfQf0BqlIFak167fLSX73g+ASn0W2JRW13jW
HfGm+m2Hi1OGPNtbwOq/bdUIq9qXKOETIXqySLHPUWSqm2N85ishQYqHW3fBTJdH
TEiwBh1E9uaj9fNN8FVGnEVEWiD4QBz5vVeurN9TgstbX3FO25bz+lca4tbH6unn
X0R3+ZHP6prUB0eoUT98bA==
-----END CERTIFICATE-----
        ]],
      },
    },
    yggdrasil = {
      enabled = true,
      peers = {
        'tls://ygg.mkg20001.io:443',
        'tcp://ygg.mkg20001.io:80',
      }
    }
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  -- next_node = {
    -- anycast IPs of all nodes
    -- name = { 'nextnode.location.community.example.org', 'nextnode', 'nn' },
  --  ip4 = '10.12.0.xxx',
  --  ip6 = 'fdff:aaaa:aaaa::aaaa',
  -- },

  mesh_vpn = {
    enabled = true,

    openvpn = {
      self_signed = false,

      ca = [[
-----BEGIN CERTIFICATE-----
MIIEdzCCA1+gAwIBAgIJAKYP7lPFj0ecMA0GCSqGSIb3DQEBBQUAMIGDMQswCQYD
VQQGEwJBVDEPMA0GA1UECBMGU3R5cmlhMQ0wCwYDVQQHEwRHcmF6MRcwFQYDVQQK
Ew5GdW5rZmV1ZXIgR3JhejEaMBgGA1UEAxMRRnVua2ZldWVyIEdyYXogQ0ExHzAd
BgkqhkiG9w0BCQEWEGFkbWluQGZmZ3Jhei5uZXQwHhcNMTIwOTEyMDA1NzQzWhcN
MjIwOTEwMDA1NzQzWjCBgzELMAkGA1UEBhMCQVQxDzANBgNVBAgTBlN0eXJpYTEN
MAsGA1UEBxMER3JhejEXMBUGA1UEChMORnVua2ZldWVyIEdyYXoxGjAYBgNVBAMT
EUZ1bmtmZXVlciBHcmF6IENBMR8wHQYJKoZIhvcNAQkBFhBhZG1pbkBmZmdyYXou
bmV0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtC6b4ptEipjyDsdV
g//ZpcFJFtchKL3+ugAubUjCyx6rL26ubN8E+SulrCxTahFgDfEu42phCnZuFpDP
KkZ/pKuUThvZfl1Vt9wZTN39q31iMJP+sAaEpYCNBwbNx2li4yMfKV2cEQy2lNy0
pq9Ql/EXOqtAiLxndP56aF87D3e5hivt3ftnUCeg1Fb8UIxw6jyiMxzeNv/kOraP
xQHnpCAtPg5SfIsSIn4c0N47v91zkbdMvHpHw1SxwpUJYjbYZlICdU/x8byVjC8m
m6737aBj/caTO/+Nx73KkGyWRDKJqRpPPfpnTRNZq9E4ATzM6OK3M7CrKiupgM3x
NgLSuwIDAQABo4HrMIHoMB0GA1UdDgQWBBRPOmahmoydfC4toZaypKfzoKbfHDCB
uAYDVR0jBIGwMIGtgBRPOmahmoydfC4toZaypKfzoKbfHKGBiaSBhjCBgzELMAkG
A1UEBhMCQVQxDzANBgNVBAgTBlN0eXJpYTENMAsGA1UEBxMER3JhejEXMBUGA1UE
ChMORnVua2ZldWVyIEdyYXoxGjAYBgNVBAMTEUZ1bmtmZXVlciBHcmF6IENBMR8w
HQYJKoZIhvcNAQkBFhBhZG1pbkBmZmdyYXoubmV0ggkApg/uU8WPR5wwDAYDVR0T
BAUwAwEB/zANBgkqhkiG9w0BAQUFAAOCAQEAEdkM3gIf5wbyIIB3VjllnSonD9b4
eTYOFG+oTFMCwwlSxOyhQQ7XOgRL5B4JqnVoDfXOz70BnIge+LyNllUaxzGXjFKQ
aNga+vMx5YKqjbx83AWGRBbt7HYO1grvwk9hPRjWDmCd/nUlmw3lHt5/5UztCl+p
wr0zLLMvLf8Z5OKnWoheNND4DJ453CKs+PSKCWGRf6UevcDadE2WgKYPR0gzBrbA
cqKcAlcSW4rFA4Hgp+4UJkm/Zk4+bPHWlDMBfEiNY+hM2pB7tSdwckTQRkj+ESBL
6cMdDMHN0ivYxeHQVRXl1+nW/Uho/GuyS2eHlAFPW5Pzpgn2yYm9qz5eYQ==
-----END CERTIFICATE-----
      ]],

      config = {
        -- client, dev, dev-type are set by default
        -- options are using _ instead of -

        proto = 'udp',
        remote = {
          'tun.graz.funkfeuer.at 1194'
        },
        resolv_retry = 'infinite',
        nobind = true,

        persist_key = true,
        persist_tun = true,

        -- when key is specified then will only start if that exists
        ca = "/etc/openvpn/ca.crt",
        cert = "/etc/openvpn/mesh.crt",
        key = "/etc/openvpn/mesh.key",

        ns_cert_type = 'server',

        cipher = 'none',

        verb = 3,
      },
    },

    bandwidth_limit = {
      -- The bandwidth limit can be enabled by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      egress = 200,

      -- Default download limit (kbit/s).
      ingress = 3000,
    },
  },

  authorized_keys = {
    -- mkg20001
    'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIBBEhZ7sLQCNZXBunHMxEDS2Niy3wpnHgUPDBCNeKew mkg20001@gmail.com',
    -- gabor
    'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOJQSyzxAt5NJ3+IhwI0+Qvg0s4zofVJjizulhuwcSZo gabor@g',
    -- av
    'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILx3bNdCoR8CmDS30bGP+/QaC/3P4XfZUz6Kt5poDfAS av',
  },

  autoupdater = {
    -- Default branch (optional), can be overridden by setting GLUON_AUTOUPDATER_BRANCH when building.
    -- Set GLUON_AUTOUPDATER_ENABLED to enable the autoupdater by default for newly installed nodes.
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
          'http://ffgraz.mkg20001.io/stable/images/sysupgrade',
          'http://ffgraz-mesh.mkg20001.io/stable/images/sysupgrade',
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 2,

        -- List of public keys of maintainers.
        pubkeys = {
          '7c69d8a402e0c5f443f27ac30549c4e4c9f0e7f0f4bc4dbfce93afee89bb79c4', -- mkg20001
          '2156016823905e299805708b10a66a3772819664dd28b9fd00ff714fcdbb5b6c', -- gabor
          -- 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Bob
          -- 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Mary
        },
      },

      beta = {
        name = 'beta',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
          'http://ffgraz.mkg20001.io/beta/images/sysupgrade',
          'http://ffgraz-mesh.mkg20001.io/beta/images/sysupgrade',
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
          '7c69d8a402e0c5f443f27ac30549c4e4c9f0e7f0f4bc4dbfce93afee89bb79c4', -- mkg20001
          '2156016823905e299805708b10a66a3772819664dd28b9fd00ff714fcdbb5b6c', -- gabor
          -- 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Bob
          -- 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Mary
        },
      },

      experimental = {
        name = 'experimental',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
          'http://ffgraz.mkg20001.io/experimental/images/sysupgrade',
          'http://ffgraz-mesh.mkg20001.io/experimental/images/sysupgrade',
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
          '5b755c0064558fe7a6c809a086d57ede9b89b07b25d95e1efe3cfe048b176621', -- nightly-key
        },
      },

      upstream = {
        name = 'upstream',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
          'http://ffgraz.mkg20001.io/upstream/images/sysupgrade',
          'http://ffgraz-mesh.mkg20001.io/upstream/images/sysupgrade',
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
          '5b755c0064558fe7a6c809a086d57ede9b89b07b25d95e1efe3cfe048b176621', -- nightly-key
        },
      },

      dev = {
        name = 'dev',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
          'http://ffgraz.mkg20001.io/dev/images/sysupgrade',
          'http://ffgraz-mesh.mkg20001.io/dev/images/sysupgrade',
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
          '5b755c0064558fe7a6c809a086d57ede9b89b07b25d95e1efe3cfe048b176621', -- nightly-key
        },
      },
    },
  },
}
