-- This is an example site configuration for Gluon v2021.1.1
--
-- Take a look at the documentation located at
-- https://gluon.readthedocs.io/ for details.
--
-- This configuration will not work as is. You're required to make
-- community specific changes to it!
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  -- hostname_prefix = 'funkfeuer-',

  -- Name of the community.
  site_name = 'Funkfeuer Graz',

  -- Shorthand of the community.
  site_code = 'ffgraz',

  -- 32 bytes of random data, encoded in hexadecimal
  -- This data must be unique among all sites and domains!
  -- Can be generated using: echo $(hexdump -v -n 32 -e '1/1 "%02x"' </dev/urandom)
  domain_seed = 'b078cc105bbd0fc96fee1253c7e3246dd759003c2eb10e9893d8dffe3928b13d',

  -- Prefixes used within the mesh.
  -- prefix6 is required, prefix4 can be omitted if next_node.ip4
  -- is not set.
  prefix4 = '10.12.0.0/16',
  prefix6 = 'fdff:aaaa:aaaa::/64',

  tmpIpPrefix4 = '10.12.0.0/16',

  -- Timezone of your community. TODO
  -- See https://openwrt.org/docs/guide-user/base-system/system_configuration#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {'1.ntp.services.ffxx'},

  -- Wireless regulatory domain of your community.
  regdom = 'AT',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 5,
    channel_adjustable = true,

    -- ESSIDs used for client network.
    ap = {
      ssid = 'graz.funkfeuer.at', -- (optional - SSID for open client network)
      -- funkfeuer does not approve
      disabled = true,

      -- Configuration for a backward compatible OWE network below.
      owe_ssid = 'owe.graz.funkfeuer.at', -- (optional - SSID for OWE client network)
      owe_transition_mode = true, -- (optional - enables transition-mode - requires ssid as well as owe_ssid)
    },

    mesh = {
      mode = 'adhoc',
      id = 'http://graz.funkfeuer.at/v%s', -- usually you don't want users to connect to this mesh-SSID, so use a cryptic id that no one will accidentally mistake for the client WiFi
      mcast_rate = 12000,
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel.
  wifi5 = {
    channel = 44,
    channel_adjustable = true,
    outdoor_chanlist = '100-140',
    ap = {
      ssid = 'graz.funkfeuer.at',
      -- funkfeuer does not approve
      disabled = true,

      -- Configuration for a backward compatible OWE network below.
      owe_ssid = 'owe.graz.funkfeuer.at', -- (optional - SSID for OWE client network)
      owe_transition_mode = true, -- (optional - enables transition-mode - requires ssid as well as owe_ssid)
    },
    mesh = {
      mode = 'adhoc',
      id = 'http://graz.funkfeuer.at/v%s', -- usually you don't want users to connect to this mesh-SSID, so use a cryptic id that no one will accidentally mistake for the client WiFi
      mcast_rate = 12000,
    },
  },

  mesh = {
    vxlan = true,
    olsrd = {
      v1 = true,
    },
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  -- next_node = {
    -- anycast IPs of all nodes
    -- name = { 'nextnode.location.community.example.org', 'nextnode', 'nn' },
  --  ip4 = '10.12.0.xxx',
  --  ip6 = 'fdff:aaaa:aaaa::aaaa',
  -- },

  -- Options specific to routing protocols (optional)
  -- mesh = {
    -- Options specific to the batman-adv routing protocol (optional)
    -- batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      -- gw_sel_class = 1,
    -- },
  -- },

  mesh_vpn = {
    enabled = true,
    mtu = 1312,

    openvpn = {
      config = [[
        client

        dev tap0

        proto udp
        remote tun.graz.funkfeuer.at 1194
        resolv-retry infinite
        nobind

        persist-key
        persist-tun

        ca "/ca.crt"
        cert "/mesh.crt"
        key "/mesh.key"

        ns-cert-type server

        cipher none

        verb 3
      ]],
    },

    bandwidth_limit = {
      -- The bandwidth limit can be enabled by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      egress = 200,

      -- Default download limit (kbit/s).
      ingress = 3000,
    },
  },

  autoupdater = {
    -- Default branch (optional), can be overridden by setting GLUON_AUTOUPDATER_BRANCH when building.
    -- Set GLUON_AUTOUPDATER_ENABLED to enable the autoupdater by default for newly installed nodes.
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {'http://ffgraz.mkg20001.io/stable/sysupgrade'},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 2,

        -- List of public keys of maintainers.
        pubkeys = {
          '7c69d8a402e0c5f443f27ac30549c4e4c9f0e7f0f4bc4dbfce93afee89bb79c4', -- mkg20001
          -- 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Alice
          -- 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Bob
          -- 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Mary
        },
      },

      beta = {
        name = 'beta',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {'http://ffgraz.mkg20001.io/beta/sysupgrade'},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
          '7c69d8a402e0c5f443f27ac30549c4e4c9f0e7f0f4bc4dbfce93afee89bb79c4', -- mkg20001
          -- 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Alice
          -- 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Bob
          -- 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Mary
        },
      },

      experimental = {
        name = 'experimental',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {'http://ffgraz.mkg20001.io/experimental/sysupgrade'},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
          '5b755c0064558fe7a6c809a086d57ede9b89b07b25d95e1efe3cfe048b176621', -- nightly-key
        },
      },
    },
  },
}
